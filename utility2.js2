/* MODULE_BEGIN { "actionList": ["lint"], "file": ".build/utility2_external.browser.css" } */
/*jslint browser: true, indent: 2, maxerr: 8, node: true, nomen: true, regexp: true, todo: true, unparam: true*/
/*global global, required, state, underscore, utility2, $*/
/* CSS_COMMENT
(function moduleInit() {
  'use strict';
  return {
    cache: true,
    cachePrefix: '/rollup',
    urlList: [
      //// bootstrap
      'https://raw.github.com/twbs/bootstrap/master/dist/css/bootstrap.css',
      //// datatables
      'https://raw.github.com/DataTables/DataTables/master/media/css/jquery.dataTables.css',
      //// qunit
      'https://qunitjs.com/resources/qunit.css',
      //// select2
      'https://raw.github.com/ivaynberg/select2/master/select2.css'
    ]
  };
}());
CSS_COMMENT */
/* MODULE_END */



/* MODULE_BEGIN { "actionList": ["lint"], "file": ".build/utility2_external.browser.js" } */
/*jslint browser: true, indent: 2, maxerr: 8, node: true, nomen: true, regexp: true, todo: true, unparam: true*/
/*global global, required, state, underscore, utility2, $*/
(function moduleInit() {
  'use strict';
  if (typeof window === 'object') {
    window.global = window.global || window;
  }
  global.required = global.required || {};
  return {
    cache: true,
    cachePrefix: '/rollup',
    postProcessing: function (content) {
      return content
        /* mime.types */
        .replace(
          (/(\n\/\* MODULE_BEGIN .*\/mime.types \*\/\n)([\S\s]+?)(\n\/\* MODULE_END \*\/\n)/g),
          function (_, header, content, footer) {
            return header + '(function () { required.mime = { lookupDict: { /*'
              + content.replace((/^(\w\S+)\s+(\w.*)$/gm), function (_, value, keyList) {
                return '*/' + keyList.replace((/\S+/g), function (key) {
                  return '"' + key + '":"' + value + '",';
                }) + '/*';
              }) + '*/ } }; }());' + footer;
          }
        )
        /* nodejs */
        .replace(
          (/(\n\/\* MODULE_BEGIN https:\/\/raw\.github\.com\/joyent\/node\/master\/lib\/(\w+)\.js \*\/\n[\S\s]+?\n\/\* MODULE_END \*\/\n)/g),
          '(function () { var module = {}, exports = module.exports = {},'
            + 'process = global.process || {};'
            + 'require = function (module) { return required[module] };'
            + '$1'
            + 'required.$2 = module.exports; }());'
        )
        /* underscore */
        .replace(
          (/(\n\/\* MODULE_BEGIN .*\/underscore.js \*\/\n[\S\s]+?\n\/\* MODULE_END \*\/\n)/g),
          '(function () { var module = {}, exports = module.exports = {}; $1'
            + 'global.underscore = module.exports; }());'
        );
    },
    urlList: [
      /* jquery */
      'http://code.jquery.com/jquery.js',
      /* angularjs */
      'http://code.angularjs.org/snapshot/angular.js',
      /* bootstrap */
      'https://raw.github.com/twbs/bootstrap/master/dist/js/bootstrap.js',
      /* datatables */
      'https://raw.github.com/DataTables/DataTables/master/media/js/jquery.dataTables.js',
      /* highstock */
      'http://code.highcharts.com/stock/highstock.js',
      /* mime.types */
      'http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types',
      /* nodejs */
      'https://raw.github.com/joyent/node/master/lib/util.js',
      'https://raw.github.com/joyent/node/master/lib/path.js',
      'https://raw.github.com/joyent/node/master/lib/punycode.js',
      'https://raw.github.com/joyent/node/master/lib/querystring.js',
      'https://raw.github.com/joyent/node/master/lib/url.js',
      /* qunit */
      'https://qunitjs.com/resources/qunit.js',
      /* select2 */
      'https://raw.github.com/ivaynberg/select2/master/select2.js',
      /* typeahead */
      'https://raw.github.com/twitter/typeahead.js/master/dist/typeahead.bundle.js',
      /* underscore */
      'https://raw.github.com/jashkenas/underscore/master/underscore.js'
    ]
  };
}());
/* MODULE_END */



/* MODULE_BEGIN { "actionList": ["lint"], "file": ".build/utility2_external.shared.js" } */
/*jslint browser: true, indent: 2, maxerr: 8, node: true, nomen: true, regexp: true, todo: true, unparam: true*/
/*global global, required, state, underscore, utility2, $*/
(function moduleInit() {
  'use strict';
  if (typeof window === 'object') {
    window.global = window.global || window;
  }
  global.required = global.required || {};
  return {
    cache: true,
    cachePrefix: '/rollup',
    postProcessing: function (content) {
      return content
        /* csslint */
        .replace(
          (/(\n\/\* MODULE_BEGIN .*\/csslint.js \*\/\n[\S\s]+?\n\/\* MODULE_END \*\/\n)/g),
          '(function () { var module = {}, exports = module.exports = {}; $1'
            + 'required.csslint = CSSLint;'
            + '}());'
        )
        /* cssmin */
        .replace(
          (/(\n\/\* MODULE_BEGIN .*\/cssmin.js \*\/\n[\S\s]+?\n\/\* MODULE_END \*\/\n)/g),
          '(function () { var module = {}, exports = module.exports = {}; $1'
            + 'required.cssmin = cssmin; }());'
        )
        /* jslint */
        .replace(
          (/(\n\/\* MODULE_BEGIN .*\/jslint.js \*\/\n[\S\s]+?\n\/\* MODULE_END \*\/\n)/g),
          '(function () { var module = {}, exports = module.exports = {}; $1'
            + 'required.jslint = JSLINT; }());'
        )
        /* mime.types */
        .replace(
          (/(\n\/\* MODULE_BEGIN .*\/mime.types \*\/\n)([\S\s]+?)(\n\/\* MODULE_END \*\/\n)/g),
          function (_, header, content, footer) {
            return header + '(function () { required.mime = { lookupDict: { /*'
              + content.replace((/^(\w\S+)\s+(\w.*)$/gm), function (_, value, keyList) {
                return '*/' + keyList.replace((/\S+/g), function (key) {
                  return '"' + key + '":"' + value + '",';
                }) + '/*';
              }) + '*/ } }; }());' + footer;
          }
        )
        /* nodejs */
        .replace(
          (/(\n\/\* MODULE_BEGIN https:\/\/raw\.github\.com\/joyent\/node\/master\/lib\/(\w+)\.js \*\/\n[\S\s]+?\n\/\* MODULE_END \*\/\n)/g),
          '(function () { var module = {}, exports = module.exports = {},'
            + 'process = global.process || {};'
            + 'require = function (module) { return required[module] };'
            + '$1'
            + 'required.$2 = module.exports; }());'
        )
        /* uglify-js */
        .replace(
          (/(\n\/\* MODULE_BEGIN https:\/\/raw\.github\.com\/mishoo\/UglifyJS2\/master\/lib\/utils\.js \*\/\n[\S\s]+\n\/\* MODULE_BEGIN https:\/\/raw\.github\.com\/mishoo\/UglifyJS2\/master\/lib\/mozilla-ast\.js \*\/\n[\S\s]+?\n\/\* MODULE_END \*\/\n)/g),
          '(function () { var module = {}, exports = module.exports = {}; $1'
            + 'required.uglify_js = { parse: parse, Compressor: Compressor, OutputStream: OutputStream }; }());'
        )
        /* underscore */
        .replace(
          (/(\n\/\* MODULE_BEGIN .*\/underscore.js \*\/\n[\S\s]+?\n\/\* MODULE_END \*\/\n)/g),
          '(function () { var module = {}, exports = module.exports = {}; $1'
            + 'global.underscore = module.exports; }());'
        );
    },
    urlList: [
      /* csslint */
      'https://raw.github.com/stubbornella/csslint/master/release/csslint.js',
      /* cssmin */
      'https://raw.github.com/jbleuzen/node-cssmin/master/cssmin.js',
      /* jslint */
      'https://raw.github.com/douglascrockford/JSLint/master/jslint.js',
      /* mime.types */
      'http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types',
      /* nodejs */
      'https://raw.github.com/joyent/node/master/lib/util.js',
      'https://raw.github.com/joyent/node/master/lib/path.js',
      'https://raw.github.com/joyent/node/master/lib/punycode.js',
      'https://raw.github.com/joyent/node/master/lib/querystring.js',
      'https://raw.github.com/joyent/node/master/lib/url.js',
      /* uglifyjs */
      'https://raw.github.com/mishoo/UglifyJS2/master/lib/utils.js',
      'https://raw.github.com/mishoo/UglifyJS2/master/lib/ast.js',
      'https://raw.github.com/mishoo/UglifyJS2/master/lib/parse.js',
      'https://raw.github.com/mishoo/UglifyJS2/master/lib/transform.js',
      'https://raw.github.com/mishoo/UglifyJS2/master/lib/scope.js',
      'https://raw.github.com/mishoo/UglifyJS2/master/lib/output.js',
      'https://raw.github.com/mishoo/UglifyJS2/master/lib/compress.js',
      'https://raw.github.com/mishoo/UglifyJS2/master/lib/sourcemap.js',
      'https://raw.github.com/mishoo/UglifyJS2/master/lib/mozilla-ast.js',
      /* underscore */
      'https://raw.github.com/jashkenas/underscore/master/underscore.js'
    ]
  };
}());
/* MODULE_END */



/* MODULE_BEGIN { "actionList": ["lint"], "file": ".build/utility2_phantomjs.js" } */
/*jslint browser: true, indent: 2, maxerr: 8, node: true, nomen: true, regexp: true, todo: true, unparam: true*/
/*global global, required, state, underscore, utility2, $*/
/*jslint indent: 2, node: true, nomen: true*/
(function moduleInitPhantomjs() {
  /*
    this phantomjs module opens a webpage
  */
  'use strict';
  var local;
  local = {

    _init: function () {
      var page, state;
      /* init state object */
      state = JSON.parse(global.atob(require('system').args[1]));
      /* assert state.timeoutDefault is a positive, finite number */
      setTimeout(function () {
        utility2.assert(
          0 < state.timeoutDefault && state.timeoutDefault < Infinity,
          state.timeoutDefault
        );
      });
      /* set timeout */
      setTimeout(function () {
        if (state.modeOpenStatus !== 'success') {
          console.error('phantomjs - timeout', state.modeOpenStatus, state.url);
        }
        global.phantom.exit();
      }, state.timeoutDefault);
      /* open requested webpage */
      page = require('webpage').create();
      page.onConsoleMessage = function () {
        console.log.apply(console, arguments);
      };
      page.open(state.url, function (status) {
        state.modeOpenStatus = status;
        console.log('phantomjs - opened', status, state.url);
      });
    },

    assert: function (passed, message) {
      /*
        this function throws an error if the assertion fails
      */
      if (!passed) {
        setTimeout(function () {
          global.phantom.exit(1);
        });
        throw new Error(message ? 'assertion error - ' + message : 'assertion error');
      }
    }

  };
  local._init();
}());
/* MODULE_END */



/* MODULE_BEGIN { "actionList": ["lint", "eval"], "file": "utility2.js2.js" } */
/*jslint browser: true, indent: 2, maxerr: 8, node: true, nomen: true, regexp: true, todo: true, unparam: true*/
/*global global, required, state, underscore, utility2, $*/
(function moduleInitJs2Nodejs() {
  /*
    this nodejs module finishes init of this js2 file
  */
  'use strict';
  var local;
  local = {

    _name: 'utility2.moduleInitJs2Nodejs',

    _init: function () {
      if (state.modeNodejs) {
        utility2.initModule(module, local);
      }
    },

    _initOnce: function () {
      /*jslint stupid: true*/
      if (state.modeNpmUtility2 === 'build') {
        utility2.fsMkdirpSync('.build');
        [
          ".build/utility2_phantomjs.js",
          '.build/utility2_external.browser.css',
          '.build/utility2_external.browser.js',
          '.build/utility2_external.shared.js'
        ].forEach(function (file) {
          required.fs.writeFileSync(file, state.fsWatchDict[file].content);
        });
      }
      if (!state.modeUtility2Js2) {
        state.modeUtility2Js2 = true;
        /* indicate utility2.js2 is ready */
        utility2.readyUtility2();
      }
    }

  };
  local._init();
}());
/* MODULE_END */



/* MODULE_BEGIN { "actionList": ["lint", "shell"], "file": "utility2.sh" } */
privateEval() {
  ## this function evals $1
  echo $1
  eval "$1"
}

privateMain() {
## this function is the main program
  ## cwd
  CWD=$(pwd)
  ## utility2 directory
  DIR=$NODEJS_UTILITY2_DIR
  ## utility2_external file
  FILE_UTILITY2_EXTERNAL=utility2_external.$NODEJS_PACKAGE_JSON_VERSION.tar.gz
  if [ $NODEJS_PROCESS_ARGV_2 == "--mode-npm-utility2" ]; then
    case $NODEJS_PROCESS_ARGV_3 in

    ## called by npm run-script build
    build)
      local SCRIPT="cd '$DIR'"
      SCRIPT="$SCRIPT && ./utility2.js --mode-debug silent --rollup-file-list"
      SCRIPT="$SCRIPT .build/utility2_external.browser.css"
      SCRIPT="$SCRIPT,.build/utility2_external.browser.js"
      SCRIPT="$SCRIPT,.build/utility2_external.shared.js"
      SCRIPT="$SCRIPT && rm -fr .install && mkdir -p .install/public"
      SCRIPT="$SCRIPT && cp .build/utility2_phantomjs.js .install/"
      SCRIPT="$SCRIPT && cp .build/*.rollup.* .install/public/"
      SCRIPT="$SCRIPT && tar -czvf .build/$FILE_UTILITY2_EXTERNAL"
      SCRIPT="$SCRIPT --exclude=*.compiled"
      SCRIPT="$SCRIPT --exclude=*.log"
      SCRIPT="$SCRIPT .install"
      SCRIPT="$SCRIPT && ls -l .build"
      privateEval "$SCRIPT"
      ;;

    ## called by npm run-script install
    install)
      local SCRIPT="cd '$DIR'"
      SCRIPT="$SCRIPT && rm -fr .install && mkdir .install"
      ## install utility2_external
      SCRIPT="$SCRIPT && curl -sL 'https://github.com/kaizhu256/utility2/releases/download/external/$FILE_UTILITY2_EXTERNAL'"
      SCRIPT="$SCRIPT | tar -xzvf -"
      ## install sauce-connect
      SCRIPT="$SCRIPT && curl -sL 'https://github.com/kaizhu256/utility2/releases/download/external/sc-4.0-$NODEJS_PROCESS_PLATFORM' > .install/sc.compiled"
      SCRIPT="$SCRIPT && chmod 755 .install/sc.compiled"
      SCRIPT="$SCRIPT && find .install"
      privateEval "$SCRIPT"
      ;;

    ## called by npm run-script publish-github
    publish-github)
      local SCRIPT="cd '$DIR'"
      SCRIPT="$SCRIPT && ./utility2.js --github-release-upload-file-list .build/$FILE_UTILITY2_EXTERNAL"
      privateEval "$SCRIPT"
      ;;

    esac
    ## kill parent normally if last exit code was 0
    if [ $? == 0 ]; then
      kill -TERM $NODEJS_PROCESS_PID
    ## kill parent abnormally
    else
      kill -ABRT $NODEJS_PROCESS_PID
    fi
  fi
}

privateMain
/* MODULE_END */

